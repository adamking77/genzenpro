---
interface Props {
  year: string;
  title: string;
  aboutTitle: string;
  aboutDescription: string;
  collectionsTitle: string;
  collections: string[];
}

const { 
  year, 
  title, 
  aboutTitle,
  aboutDescription,
  collectionsTitle,
  collections 
} = Astro.props;

const parsedYear = parseInt(year);
---

<section id="founded-story-section" class="py-32 lg:py-48 bg-background text-foreground">
  <div class="max-w-7xl mx-auto px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-20 lg:gap-32">
      <div class="transition-all duration-1000 "" data-animate="founded-story-left">
        <div class="space-y-12">
          <div class="text-xs font-normal text-foreground/40 tracking-widest uppercase mb-8">
            Founded in {year}
          </div>
          <h2 class="text-3xl md:text-4xl font-light leading-tight tracking-tight text-foreground">
            {title}
          </h2>
          
          
        </div>
      </div>
      
      <div class="space-y-16 transition-all duration-1000 delay-200 "" data-animate="founded-story-right">
        <div class="space-y-8">
          <h3 class="text-lg font-medium text-foreground tracking-wide">
            {aboutTitle}
          </h3>
          <div class="space-y-6">
            <p class="text-base font-light text-foreground/70 leading-relaxed">
              {aboutDescription}
            </p>
          </div>
        </div>
        
        
        <div class="space-y-8 pt-8 border-t border-foreground/10">
          <h3 class="text-lg font-medium text-foreground tracking-wide">
            {collectionsTitle}
          </h3>
          <div class="space-y-6">
            {collections.map((collection, index) => (
              <div class="group cursor-pointer">
                <div class="flex items-start justify-between p-4 border border-foreground/10 hover:border-foreground/20 transition-colors duration-300">
                  <div class="space-y-2 flex-1">
                    <div class="text-base font-light text-foreground group-hover:text-blue-500 transition-colors duration-300">
                      {collection}
                    </div>
                  </div>
                  <div class="text-xs font-light text-foreground/40 ml-4">
                    {String(index + 1).padStart(2, '0')}
                  </div>
                </div>
              </div>
            ))}
          </div>
          
        </div>
      </div>
    </div>
  </div>
<script>
  document.addEventListener('astro:page-load', () => {
    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px'
    };

    // Observe left column
    const leftElement = document.querySelector('[data-animate="founded-story-left"]');
    if (leftElement) {
      const leftObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const element = entry.target as HTMLElement;
            element.classList.remove('opacity-0', 'translate-y-10');
            element.classList.add('opacity-100', 'translate-y-0');
          }
        });
      }, observerOptions);

      leftObserver.observe(leftElement);
    }

    // Observe right column with delay
    const rightElement = document.querySelector('[data-animate="founded-story-right"]');
    if (rightElement) {
      const rightObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const element = entry.target as HTMLElement;
            element.classList.remove('opacity-0', 'translate-y-10');
            element.classList.add('opacity-100', 'translate-y-0');
          }
        });
      }, observerOptions);

      rightObserver.observe(rightElement);
    }
  });
</script>
</section>
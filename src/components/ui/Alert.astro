---
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "../../lib/utils";

const alertVariants = cva(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

export interface Props extends Omit<astroHTML.JSX.IntrinsicElements['div'], 'class'>, VariantProps<typeof alertVariants> {
  class?: string;
  variant?: 'default' | 'destructive';
}

const { class: customClass, variant, ...rest } = Astro.props;

// Ensure variant is one of the allowed values or undefined for cva to pick default
const validVariant = (variant === "default" || variant === "destructive") ? variant : undefined;
---
<div
  role="alert"
  class={cn(alertVariants({ variant: validVariant }), customClass)}
  {...rest}
>
  <slot />
</div>